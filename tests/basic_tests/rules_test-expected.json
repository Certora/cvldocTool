[
    {
        "type": "text",
        "text": "# Natspec for rules.\r\n * ## A testing file for rules definitions comments.\r\n * ## it contains rules with and without parameters\r\n"
    },
    {
        "content": "/**\r\n  * @title Simple rule for checking authorizations\r\n  * @notice  getting two addresses and a method.\r\n  * checking if the sender is autorise to run the method.\r\n  * @dev Note: this is a parametric rule.\r\n  * @param d - the address of the sender\r\n  * @param x - the address of the function invoker\r\n  * @param f - the function to be invoked.\r\n  **/",
        "id": "simple",
        "title": "Simple rule for checking authorizations",
        "type": "rule",
        "params": [
            {
                "type": "address",
                "name": "d",
                "comment": "d - the address of the sender"
            },
            {
                "type": "address",
                "name": "x",
                "comment": "x - the address of the function invoker"
            },
            {
                "type": "method",
                "name": "f",
                "comment": "f - the function to be invoked."
            }
        ],
        "return": {
            "type": "None"
        },
        "notice": "getting two addresses and a method.\r\nchecking if the sender is autorise to run the method.",
        "dev": "Note: this is a parametric rule."
    },
    {
        "content": "/** # simple2 - another simple rule.\r\n  * @title Selector rule.\r\n  * @dev this rule is testing the sinvoke function.\r\n  * @param d the address of the sender.\r\n  * @param x the address of the receiver\r\n  * @param ff - this doesn't exist.\r\n  **/",
        "id": "simple2",
        "title": "Selector rule.",
        "type": "rule",
        "params": [
            {
                "type": "address",
                "name": "d",
                "comment": "d the address of the sender."
            },
            {
                "type": "address",
                "name": "x",
                "comment": "x the address of the receiver"
            },
            {
                "type": "method",
                "name": "f"
            }
        ],
        "return": {
            "type": "None"
        },
        "notice": "# simple2 - another simple rule.",
        "dev": "this rule is testing the sinvoke function."
    },
    {
        "content": "/**\r\n  * @title simple3 - another simple rule.\r\n  * @notice this is a very short and simple rule\r\n  * @dev this rule is testing the sinvoke function.\r\n  * @param d the first address.\r\n  * @param x the second address.\r\n  * @param f - the method that is being tested.\r\n  **/",
        "id": "simple3",
        "title": "simple3 - another simple rule.",
        "type": "rule",
        "params": [
            {
                "type": "address",
                "name": "d",
                "comment": "d the first address."
            },
            {
                "type": "address",
                "name": "x",
                "comment": "x the second address."
            },
            {
                "type": "method",
                "name": "f",
                "comment": "f - the method that is being tested."
            }
        ],
        "return": {
            "type": "None"
        },
        "notice": "this is a very short and simple rule",
        "dev": "this rule is testing the sinvoke function."
    }
]