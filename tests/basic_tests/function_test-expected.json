[
    {
        "type": "text",
        "text": "#  Function testing.\n# This function is testing the invoking process\n# part of the Fahrenheit project"
    },
    {
        "content": "if (!f.isFallback && f.selector ==  authorizeVoteSigner(address).selector) {\r\n\t    env eF;\r\n\t\trequire (eF.msg.sender == x);\r\n        sinvoke authorizeVoteSigner(eF,d);\r\n\t}\r\n\telse if(!f.isFallback && f.selector == createAccount().selector) {\r\n\t\tenv eF;\r\n\t\tsinvoke createAccount(eF);\r\n\t}\r\n\telse {\r\n\t\t\tcalldataarg arg;\r\n\t\t\tenv eF;\r\n\t\t\tsinvoke f(eF,arg);\r\n\t}",
        "id": "callF",
        "title": "Callf authorization function.",
        "type": "function",
        "params": [
            {
                "type": "address",
                "name": "d",
                "comment": "d the first address"
            },
            {
                "type": "address",
                "name": "x",
                "comment": "x the unkown signer address"
            },
            {
                "type": "method",
                "name": "f",
                "comment": "f the signing function."
            }
        ],
        "return": {
            "type": "None"
        },
        "notice": "this function is part of the project and\nperforming authorization checks on some addresses.",
        "dev": " the function is assuming the declaration  of 'autorizeVoteSigner\nfunction."
    },
    {
        "content": "uint8 age;\r\n    age, _, _ = getFullVoterDetails(e, voter);\r\n    return age;",
        "id": "getVoterAge",
        "title": "getVoterAge - get voter age.",
        "type": "function",
        "params": [
            {
                "type": "env",
                "name": "e",
                "comment": "e the used environment"
            },
            {
                "type": "address",
                "name": "voter",
                "comment": "voter - the prospect voter address"
            }
        ],
        "return": {
            "type": "uint8",
            "comment": "the voter age."
        },
        "notice": "this function decides if the sender is old enough to vote\nit uses the getFullVoterDetails function.",
        "dev": " the function is assuming the declaration  of 'getFullVoterDetails'\nfunction."
    },
    {
        "content": "bool isReg;\r\n    _, isReg, _ = getFullVoterDetails(e, voter);\r\n    return isReg;",
        "id": "getRegistered",
        "title": "getRegistered - get registered.",
        "type": "function",
        "params": [
            {
                "type": "env",
                "name": "e",
                "comment": "e the used environment"
            },
            {
                "type": "address",
                "name": "voter",
                "comment": "voter - the prospect voter address"
            }
        ],
        "return": {
            "type": "bool",
            "comment": "indication if the voter is registered."
        },
        "dev": " the function is assuming the declaration  of 'getFullVoterDetails'\nfunction."
    }
]