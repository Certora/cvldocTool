[
    {
        "type": "text",
        "text": "## Verification of ERC1155Burnable\n\n`ERC1155Burnable` extends the `ERC1155` functionality by wrapping the internal\nmethods `_burn` and `_burnBatch` in the public methods `burn` and `burnBatch`,\nadding a requirement that the caller of either method be the account holding\nthe tokens or approved to act on that account's behalf.\n\n### Assumptions and Simplifications\n\n- No changes made using the harness\n\n### Properties"
    },
    {
        "content": "/// If a method call reduces account balances, the caller must be either the \n/// holder of the account or approved to act on the holder's behalf.\n",
        "id": "onlyHolderOrApprovedCanReduceBalance",
        "title": "Only holder or approved can reduce balance",
        "type": "rule",
        "params": [
            {
                "type": "method",
                "name": "f"
            }
        ],
        "return": {
            "type": "None"
        },
        "notice": "If a method call reduces account balances, the caller must be either the\nholder of the account or approved to act on the holder's behalf."
    },
    {
        "content": "/// Burning a larger amount of a token must reduce that token's balance more \n/// than burning a smaller amount.\n/// n.b. This rule holds for `burnBatch` as well due to rules establishing \n/// appropriate equivance between `burn` and `burnBatch` methods.\n",
        "id": "burnAmountProportionalToBalanceReduction",
        "title": "Burn amount proportional to balance reduction",
        "type": "rule",
        "return": {
            "type": "None"
        },
        "notice": "Burning a larger amount of a token must reduce that token's balance more\nthan burning a smaller amount.\nn.b. This rule holds for `burnBatch` as well due to rules establishing\nappropriate equivance between `burn` and `burnBatch` methods."
    },
    {
        "content": "/// Two sequential burns must be equivalent to a single burn of the sum of their\n/// amounts.\n/// This rule holds for `burnBatch` as well due to rules establishing \n/// appropriate equivance between `burn` and `burnBatch` methods.\n",
        "id": "sequentialBurnsEquivalentToSingleBurnOfSum",
        "title": "Sequential burns equivalent to single burn of sum",
        "type": "rule",
        "return": {
            "type": "None"
        },
        "notice": "Two sequential burns must be equivalent to a single burn of the sum of their\namounts.\nThis rule holds for `burnBatch` as well due to rules establishing\nappropriate equivance between `burn` and `burnBatch` methods."
    },
    {
        "content": "/// The result of burning a single token must be equivalent whether done via\n/// burn or burnBatch.\n",
        "id": "singleTokenBurnBurnBatchEquivalence",
        "title": "Single token burn burn batch equivalence",
        "type": "rule",
        "return": {
            "type": "None"
        },
        "notice": "The result of burning a single token must be equivalent whether done via\nburn or burnBatch."
    },
    {
        "content": "/// The results of burning multiple tokens must be equivalent whether done \n/// separately via burn or together via burnBatch.\n",
        "id": "multipleTokenBurnBurnBatchEquivalence",
        "title": "Multiple token burn burn batch equivalence",
        "type": "rule",
        "return": {
            "type": "None"
        },
        "notice": "The results of burning multiple tokens must be equivalent whether done\nseparately via burn or together via burnBatch."
    },
    {
        "content": "/// If passed empty token and burn amount arrays, burnBatch must not change \n/// token balances or address permissions.\n",
        "id": "burnBatchOnEmptyArraysChangesNothing",
        "title": "Burn batch on empty arrays changes nothing",
        "type": "rule",
        "return": {
            "type": "None"
        },
        "notice": "If passed empty token and burn amount arrays, burnBatch must not change\ntoken balances or address permissions."
    }
]
